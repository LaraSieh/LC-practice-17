567. Permutation in String


Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

Example 1:
Input:s1 = "ab" s2 = "eidbaooo"
Output:True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:
Input:s1= "ab" s2 = "eidboaoo"
Output: False
Note:
The input strings only contain lower case letters.
The length of both given strings is in range [1, 10,000].

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int l1= s1.size(), l2=s2.size();
        int include[256] ={0};
        
        for (char c : s1) ++include[c];
        
        queue<char> find;
        for (int i=0; i<l2; ++i) {
            char c = s2[i];
            if (include[c]>0) {
                -- include[c];
                find.push(c);
                if (find.size() == l1) return true;
            } else {
                while (!find.empty() && (find.front()!=c)) {
                    include[find.front()] ++;
                    find.pop();
                }
                if (!find.empty()) {
                    find.pop();
                    find.push(c);
                }
            }
        }
        return false;
    }
};
